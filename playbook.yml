---
- hosts: all
  gather_facts: false
  vars:
      project_name: fcs
      dbname: fcs
      dbuser: fcs
      dbpassword: fcs

  handlers:
    - name: reload postgres
      action: service name=postgresql state=reloaded
      sudo: yes

    - name: restart redis-server
      action: service name=redis-server state=restarted
      sudo: yes

  tasks:
    - name: ensure apt cache is up to date
      action: apt update_cache=yes
      sudo: yes

    - name: install system packages
      action: apt pkg={{ item }} state=present
      sudo: yes
      with_items:
        - postgresql
        - libpq-dev
        - python-dev
        - python-psycopg2
        - python-pip
        - python-virtualenv
        - git
        - vim
        - python-software-properties
        - libxml2-dev
        - libxslt1-dev
        - libdb4.8

    - name: add apt repositories
      command: apt-add-repository -y ppa:rwky/redis
      sudo: yes

    - name: update apt-get
      command: apt-get update
      sudo: yes

    - name: install redis
      command: apt-get install redis-server
      sudo: yes

    - name: postgres listen *
      lineinfile: regexp="^listen_addresses = '*'" line="listen_addresses = '*'" dest=/etc/postgresql/9.1/main/postgresql.conf
      sudo: yes
      notify:
        - reload postgres


    - name: fixing postrgres authentication configuration
      lineinfile: regexp="^local\s+all\s+all\s+" line="local all all md5" dest=/etc/postgresql/9.1/main/pg_hba.conf
      sudo: yes
      notify:
        - reload postgres

    - name: fixing postrgres authentication configuration
      lineinfile: regexp="^host\s+all\s+all\s+" line="host all all all md5" dest=/etc/postgresql/9.1/main/pg_hba.conf
      sudo: yes
      notify:
        - reload postgres

    - name: ensure database is created
      action: postgresql_db db={{ dbname }} owner=postgres
      sudo: yes
      sudo_user: postgres

    - name: ensure user has access to database
      action: postgresql_user db={{ dbname }} user={{ dbuser }} password={{ dbpassword }} priv=ALL role_attr_flags=CREATEDB,SUPERUSER
      sudo: yes
      sudo_user: postgres

    - name: configure redis
      action: copy src=redis.conf dest=/etc/redis/7897.conf
      sudo: yes

    - name: ensure redis-server is running
      action: service name=redis-server state=started
      sudo: yes

    - name: creating virtualenv
      action: command virtualenv /home/vagrant/{{ project_name }} creates=/home/vagrant/{{ project_name }}/bin/activate

    - action: lineinfile dest=/home/vagrant/.bashrc regexp="^alias e=" line="alias e='. /home/vagrant/{{ project_name }}/bin/activate && cd /vagrant && export DJANGO_SETTINGS_MODULE={{ project_name }}.settings_dev'" state=present insertafter=EOF

    - name: upgrading pip
      action: pip name=pip virtualenv=/home/vagrant/{{ project_name }} state=latest
      
    - name: installing python packages to virtualenv
      action: pip virtualenv=/home/vagrant/{{ project_name }} requirements=/vagrant/requirements.txt extra_args='--no-use-wheel'
      sudo: yes

    - name: installing python dev packages to virtualenv - dev
      action: pip virtualenv=/home/vagrant/{{ project_name }} requirements=/vagrant/requirements_dev.txt extra_args='--no-use-wheel'
      sudo: yes

    - name: django syncdb
      action: django_manage command=syncdb app_path=/vagrant/{{ project_name }}/
                            settings={{ project_name }}.settings_dev virtualenv=/home/vagrant/{{ project_name }}

    - name: django migrate
      action: django_manage command=migrate app_path=/vagrant/{{ project_name }}/
                            settings={{ project_name }}.settings_dev virtualenv=/home/vagrant/{{ project_name }}

    - name: userena check permissions
      action: django_manage command=check_permissions app_path=/vagrant/{{ project_name }}/
                            settings={{ project_name }}.settings_dev virtualenv=/home/vagrant/{{ project_name }}

